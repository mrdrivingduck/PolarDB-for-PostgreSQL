import{_ as c,M as o,p,q as d,R as a,t as s,N as e,V as t,a1 as r}from"./framework-de73eade.js";const u={},v=r('<h1 id="基于-docker-容器开发" tabindex="-1"><a class="header-anchor" href="#基于-docker-容器开发" aria-hidden="true">#</a> 基于 Docker 容器开发</h1><div class="custom-container danger"><p class="custom-container-title">DANGER</p><p>为简化使用，容器内的 <code>postgres</code> 用户没有设置密码，仅供体验。如果在生产环境等高安全性需求场合，请务必修改健壮的密码！</p></div><h2 id="在开发机器上下载源代码" tabindex="-1"><a class="header-anchor" href="#在开发机器上下载源代码" aria-hidden="true">#</a> 在开发机器上下载源代码</h2>',3),b={href:"https://github.com/ApsaraDB/PolarDB-for-PostgreSQL",target:"_blank",rel:"noopener noreferrer"},m=a("code",null,"POLARDB_11_STABLE",-1),h={href:"https://gitee.com/mirrors/PolarDB-for-PostgreSQL",target:"_blank",rel:"noopener noreferrer"},_=a("div",{class:"language-bash","data-ext":"sh"},[a("pre",{class:"language-bash"},[a("code",null,[a("span",{class:"token function"},"git"),s(" clone "),a("span",{class:"token parameter variable"},"-b"),s(` POLARDB_11_STABLE https://github.com/ApsaraDB/PolarDB-for-PostgreSQL.git
`)])])],-1),k=a("div",{class:"language-bash","data-ext":"sh"},[a("pre",{class:"language-bash"},[a("code",null,[a("span",{class:"token function"},"git"),s(" clone "),a("span",{class:"token parameter variable"},"-b"),s(` POLARDB_11_STABLE https://gitee.com/mirrors/PolarDB-for-PostgreSQL
`)])])],-1),g=r(`<p>代码克隆完毕后，进入源码目录：</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> PolarDB-for-PostgreSQL/
</code></pre></div><h2 id="拉取开发镜像" tabindex="-1"><a class="header-anchor" href="#拉取开发镜像" aria-hidden="true">#</a> 拉取开发镜像</h2>`,3),f={href:"https://hub.docker.com/r/polardb/polardb_pg_devel/tags",target:"_blank",rel:"noopener noreferrer"},P=r(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 拉取 PolarDB 开发镜像</span>
<span class="token function">docker</span> pull polardb/polardb_pg_devel
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="创建并运行容器" tabindex="-1"><a class="header-anchor" href="#创建并运行容器" aria-hidden="true">#</a> 创建并运行容器</h2><p>此时我们已经在开发机器的源码目录中。从开发镜像上创建一个容器，将当前目录作为一个 volume 挂载到容器中，这样可以：</p><ul><li>在容器内的环境中编译源码</li><li>在容器外（开发机器上）使用编辑器来查看或修改代码</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> run <span class="token parameter variable">-it</span> <span class="token punctuation">\\</span>
    <span class="token parameter variable">-v</span> <span class="token environment constant">$PWD</span>:/home/postgres/polardb_pg <span class="token punctuation">\\</span>
    --shm-size<span class="token operator">=</span>512m --cap-add<span class="token operator">=</span>SYS_PTRACE <span class="token parameter variable">--privileged</span><span class="token operator">=</span>true <span class="token punctuation">\\</span>
    <span class="token parameter variable">--name</span> polardb_pg_devel <span class="token punctuation">\\</span>
    polardb/polardb_pg_devel <span class="token punctuation">\\</span>
    <span class="token function">bash</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>进入容器后，为容器内用户获取源码目录的权限，然后编译部署 PolarDB 实例。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 获取权限并编译部署</span>
<span class="token builtin class-name">cd</span> polardb_pg
<span class="token function">sudo</span> <span class="token function">chmod</span> <span class="token parameter variable">-R</span> a+wr ./
<span class="token function">sudo</span> <span class="token function">chown</span> <span class="token parameter variable">-R</span> postgres:postgres ./
./polardb_build.sh

<span class="token comment"># 验证</span>
psql <span class="token parameter variable">-h</span> <span class="token number">127.0</span>.0.1 <span class="token parameter variable">-c</span> <span class="token string">&#39;select version();&#39;</span>
            version
--------------------------------
 PostgreSQL <span class="token number">11.9</span> <span class="token punctuation">(</span>POLARDB <span class="token number">11.9</span><span class="token punctuation">)</span>
<span class="token punctuation">(</span><span class="token number">1</span> row<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,7);function B(D,x){const n=o("ExternalLinkIcon"),l=o("CodeGroupItem"),i=o("CodeGroup");return p(),d("div",null,[v,a("p",null,[s("从 "),a("a",b,[s("GitHub"),e(n)]),s(" 上下载 PolarDB for PostgreSQL 的源代码，稳定分支为 "),m,s("。如果因网络原因不能稳定访问 GitHub，则可以访问 "),a("a",h,[s("Gitee 国内镜像"),e(n)]),s("。")]),e(i,null,{default:t(()=>[e(l,{title:"GitHub"},{default:t(()=>[_]),_:1}),e(l,{title:"Gitee 国内镜像"},{default:t(()=>[k]),_:1})]),_:1}),g,a("p",null,[s("从 DockerHub 上拉取 PolarDB for PostgreSQL 的 "),a("a",f,[s("开发镜像"),e(n)]),s("。")]),P])}const S=c(u,[["render",B],["__file","dev-on-docker.html.vue"]]);export{S as default};
